--the purpose of this macro was to clone incremental models in indivual schemas before they are run in indivual schemas to make them run as incremental models instead of full-refresh. 
--So let's say I'm a developer who wants to run modelA+ in my own indivual schema, if I first clone all incremental models downstream of modelA in my indivual schema,
--it will make dbt an incremental run which is much faster than trying to create all downstream models from scratch. The idea was that this macro would be called as a pre-hook.
--However, it seems like dbt determines if an incremental model should run as incremental or full-refresh before it executes any pre-hooks or on-run-start. So this macro is not useful.
--Instead, we can use dbt clone command.

{% macro clone_incremental_models() %}

  {% if flags.FULL_REFRESH %}
      {% set full_refresh_flag_present = true %}
  {% else %}
      {% set full_refresh_flag_present = false %}
  {% endif %}


  {% if execute %}
        {% set selected_models = [] %}
        {% for item in selected_resources %}
            {% set parts = item.split('.') %}
            {% set model_name = parts[-1] if parts|length > 1 else parts[0] %}
            {% do selected_models.append(model_name) %}
          {% endfor %}
  {% endif %}

  {% if full_refresh_flag_present==false %}
    {% set incremental_models_to_clone = [] %}
    {% if execute %}
        {% for model in graph.nodes.values() %}
            {% if model.name in selected_models %}
              {% if model.config.materialized == 'incremental' %}
                {% set model_name = model.alias %}
                {% set database_name = model.database %}
                {% set original_schema_name = model.schema | replace('_' ~ target.schema, '') %}
                {% set customized_schema_name = model.schema %}
                {% set create_schema %}
                    create schema if not exists {{database_name}}.{{customized_schema_name}};
                {% endset %}
                {% set clone_table %}
                    create or replace table {{database_name}}.{{customized_schema_name}}.{{model_name}} clone {{database_name}}.{{original_schema_name}}.{{model_name}};
                {% endset %}
                {% do run_query(create_schema) %}
                {% do run_query(clone_table) %}
              {% endif %}
            {% endif %}
        {% endfor %}
    {% endif %}
  {% endif %}
{% endmacro %}
